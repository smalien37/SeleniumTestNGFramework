<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-21T02:07:55 IST" name="Suite" finished-at="2024-01-21T02:10:14 IST" duration-ms="138625">
    <groups>
      <group name="purchase">
        <method signature="appValidationsTest.submitOrder(java.util.Map)[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" name="submitOrder" class="somoCompany.Tests.appValidationsTest"/>
      </group> <!-- purchase -->
      <group name="errorHandling">
        <method signature="ErrorValidationsTest.invalidLoginTest()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" name="invalidLoginTest" class="somoCompany.Tests.ErrorValidationsTest"/>
      </group> <!-- errorHandling -->
    </groups>
    <test started-at="2024-01-21T02:07:55 IST" name="Positive Tests" finished-at="2024-01-21T02:09:22 IST" duration-ms="86912">
      <class name="somoCompany.Tests.appValidationsTest">
        <test-method is-config="true" signature="initiateDriver()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:07:55 IST" name="initiateDriver" finished-at="2024-01-21T02:07:58 IST" duration-ms="2835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateDriver -->
        <test-method signature="submitOrder(java.util.Map)[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:07:58 IST" name="submitOrder" data-provider="getData" finished-at="2024-01-21T02:08:18 IST" duration-ms="19906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=som@gmail.com, password=Somosom@77, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:18 IST" name="tearDown" finished-at="2024-01-21T02:08:18 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initiateDriver()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:18 IST" name="initiateDriver" finished-at="2024-01-21T02:08:22 IST" duration-ms="4109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateDriver -->
        <test-method signature="submitOrder(java.util.Map)[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:22 IST" name="submitOrder" data-provider="getData" finished-at="2024-01-21T02:08:25 IST" duration-ms="2207" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=som@gmail.com, password=Somosom@77, productName=ADIDAS2 ORIGINAL}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebElement.findElement(org.openqa.selenium.By)" because the return value of "somoCompany.pageObjects.ProductCatalogue.getProductByName(String)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.findElement(org.openqa.selenium.By)" because the return value of "somoCompany.pageObjects.ProductCatalogue.getProductByName(String)" is null
at somoCompany.pageObjects.ProductCatalogue.addToCart(ProductCatalogue.java:62)
at somoCompany.Tests.appValidationsTest.submitOrder(appValidationsTest.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:25 IST" name="tearDown" finished-at="2024-01-21T02:08:25 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initiateDriver()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:25 IST" name="initiateDriver" finished-at="2024-01-21T02:08:27 IST" duration-ms="2792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateDriver -->
        <test-method signature="submitOrder(java.util.Map)[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:27 IST" name="submitOrder" data-provider="getData" finished-at="2024-01-21T02:08:47 IST" duration-ms="19962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=som@gmail.com, password=Somosom@77, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:47 IST" name="tearDown" finished-at="2024-01-21T02:08:47 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initiateDriver()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:47 IST" name="initiateDriver" finished-at="2024-01-21T02:08:49 IST" duration-ms="1778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateDriver -->
        <test-method signature="submitOrder2()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:08:49 IST" name="submitOrder2" finished-at="2024-01-21T02:09:22 IST" duration-ms="32847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:09:22 IST" name="tearDown" finished-at="2024-01-21T02:09:22 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="orderHistoryCheck()[pri:0, instance:somoCompany.Tests.appValidationsTest@1fdfafd2]" started-at="2024-01-21T02:09:22 IST" name="orderHistoryCheck" finished-at="2024-01-21T02:09:22 IST" depends-on-methods="somoCompany.Tests.appValidationsTest.submitOrder" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method somoCompany.Tests.appValidationsTest.orderHistoryCheck() on instance somoCompany.Tests.appValidationsTest@1fdfafd2 depends on not successfully finished methods 
[somoCompany.Tests.appValidationsTest.submitOrder() on instance somoCompany.Tests.appValidationsTest@1fdfafd2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method somoCompany.Tests.appValidationsTest.orderHistoryCheck() on instance somoCompany.Tests.appValidationsTest@1fdfafd2 depends on not successfully finished methods 
[somoCompany.Tests.appValidationsTest.submitOrder() on instance somoCompany.Tests.appValidationsTest@1fdfafd2]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryCheck -->
      </class> <!-- somoCompany.Tests.appValidationsTest -->
    </test> <!-- Positive Tests -->
    <test started-at="2024-01-21T02:09:22 IST" name="Negative Tests" finished-at="2024-01-21T02:10:14 IST" duration-ms="51694">
      <class name="somoCompany.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="initiateDriver()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" started-at="2024-01-21T02:09:22 IST" name="initiateDriver" finished-at="2024-01-21T02:09:26 IST" duration-ms="3779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateDriver -->
        <test-method signature="invalidLoginTest()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" started-at="2024-01-21T02:09:26 IST" name="invalidLoginTest" finished-at="2024-01-21T02:09:26 IST" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" started-at="2024-01-21T02:09:26 IST" name="tearDown" finished-at="2024-01-21T02:09:27 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initiateDriver()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" started-at="2024-01-21T02:09:27 IST" name="initiateDriver" finished-at="2024-01-21T02:09:28 IST" duration-ms="1751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateDriver -->
        <test-method signature="submitOrder3()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" started-at="2024-01-21T02:09:28 IST" name="submitOrder3" finished-at="2024-01-21T02:10:14 IST" duration-ms="45530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:somoCompany.Tests.ErrorValidationsTest@6e1d8f9e]" started-at="2024-01-21T02:10:14 IST" name="tearDown" finished-at="2024-01-21T02:10:14 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- somoCompany.Tests.ErrorValidationsTest -->
    </test> <!-- Negative Tests -->
  </suite> <!-- Suite -->
</testng-results>
